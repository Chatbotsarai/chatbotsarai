from playwright.sync_api import sync_playwright
import os
import time
import random

replied_tweets = set()

KEYWORDS_PL = [ 
    'imperium', 'wiek', 'historia', 'bitwa', 'su≈Çtan', 'mahpeyker', 'joanne b. mahpeyker', 'elon musk',
    'tesla', 'gork', 'grok', 'sztuczna inteligencja', 'hurrem', 'mahidevran', 'mustafa', 'osman',
    'turcja', 'imperium osma≈Ñskie', 'harem', 'osmanowie', 'pa≈Çac', 'sarai', 'bot', 'su≈Çtanka', 'su≈Çtanki',
    '≈õmieszna', '≈õmieszny', 'powiedz', 'odpowiedz', 'cze≈õƒá', 'co s≈Çychaƒá', 's≈Çychaƒá', 'czego', 'dlaczego',
    'czemu', 'jak', 'kiedy', 'ksiƒÖ≈ºka', 'joanna', 'autorka', 'historii', 'historyk', 'szko≈Ça', 'szkole',
    'uczƒô', 'uczƒô siƒô', 'czytaƒá', 'pisaƒá', 'komnata', 'kr√≥l', 'kr√≥lowa', 'cesarz', 'cesarzowa', 'wezyr',
    'kalif', 'szach', 'w≈Çadca', 'monarcha', 'regent', 'hetman', 'kanclerz', 'poselstwo', 'su≈Çta≈Ñski',
    'H√ºrrem', 'Sulejman', 'Mehmed', 'Selim', 'Osman', 'Halime', 'Nurbanu', 'Roksolana', 'Zygmunt',
    'Jadwiga', 'Kazimierz', 'W≈Çadys≈Çaw', 'Sobieski', 'Bona', 'Barbara Radziwi≈Ç≈Ç√≥wna', 'biografie', 'elon','musk', 
    "polska", "polityka", "bosak", "mentzen", "korwin mikke", "tusk", "nawrocki"
]

KEYWORDS_EN = [ 
    "empire", "ottoman", "ottoman empire", "age", "era", "history", "historian", "sultan", "dynasty",
    "biography", "biographies", "poland", "turkey", "turkish", "mustafa", "hurrem", "mahidevran", "suleiman",
    "s√ºleyman", "ai", "artificial intelligence", "robot", "book", "joanne", "writer", "author", "elon musk",
    "tesla", "x ai", "xai", "grok", "gork", "chatbot", "tech", "spacex", "mars", "venus", "cosmos", "queen",
    "king", "vizier", "caliph", "emperor", "empress", "palace", "harem", "sultana", "history lover", "timeline",
    "timeline cleanse", "historical", "ottomans", "mehmed", "selim", "osman", "halime", "nurbanu", "roxelana"
]

def contains_keywords(tweet_text):
    text = tweet_text.lower()
    return any(keyword.lower() in text for keyword in KEYWORDS_PL + KEYWORDS_EN)

def generate_reply(tweet_text):
    responses = [
        "Ciekawa my≈õl. A gdyby tak spojrzeƒá na to przez pryzmat Imperium Osma≈Ñskiego?",
        "Zaintrygowa≈Ça≈õ mnie tym. Kiedy≈õ podobnie sƒÖdzono na dworze su≈Çtana...",
        "To przypomina mi jednƒÖ z historii, kt√≥re opowiadam w mojej ksiƒÖ≈ºce.",
        "Czy wiesz, ≈ºe w Imperium Osma≈Ñskim sytuacja wyglƒÖda≈Ça zupe≈Çnie inaczej?",
        "Twoje s≈Çowa brzmiƒÖ jak echo z czas√≥w haremu Topkapi.",
        "Brzmisz jak prawdziwa su≈Çtanka. üëë",
        "Je≈õli interesuje Ciƒô historia ‚Äì zapraszam do mojego ≈õwiata.",
        "Zainspiruj siƒô przesz≈Ço≈õciƒÖ, by stworzyƒá przysz≈Ço≈õƒá. MAHPEYKER üåô"
    ]
    return random.choice(responses)

def main():
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=False)
        context = browser.new_context(storage_state="storage_state.json")
        page = context.new_page()

        page.goto("https://twitter.com/home")
        time.sleep(10)

        for _ in range(20):
            tweets = page.query_selector_all("article")
            for tweet in tweets:
                try:
                    tweet_text_element = tweet.query_selector("div[lang]")
                    if not tweet_text_element:
                        continue

                    tweet_text = tweet_text_element.inner_text()
                    tweet_id = tweet.get_attribute("data-testid")

                    if tweet_text not in replied_tweets and contains_keywords(tweet_text):
                        tweet.hover()
                        time.sleep(1)

                        reply_button = tweet.query_selector("div[data-testid='reply']")
                        if reply_button:
                            reply_button.click()
                            time.sleep(2)

                            textarea = page.query_selector("div[aria-label='Tweet your reply']")
                            if textarea:
                                reply_text = generate_reply(tweet_text)
                                textarea.fill(reply_text)
                                time.sleep(1)

                                send_button = page.query_selector("div[data-testid='tweetButton']")
                                if send_button:
                                    send_button.click()
                                    print(f"Bot odpowiedzia≈Ç na: {tweet_text}")
                                    replied_tweets.add(tweet_text)
                                    time.sleep(3)
                except Exception as e:
                    print(f"Error: {e}")
            page.keyboard.press("PageDown")
            time.sleep(5)

        browser.close()

if __name__ == "__main__":
    main()
